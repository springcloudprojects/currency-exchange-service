<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.springboot.springcloud</groupId>
	<artifactId>currency-exchange-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>currency-exchange-service</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR1</spring-cloud.version>
		<spring-boot-admin.version>2.1.5</spring-boot-admin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<jacoco.version>0.7.5.201505241946</jacoco.version>
		<jacoco.ant.version>0.7.8</jacoco.ant.version>
		<app.host>localhost</app.host>
		<app.port>36320</app.port>
		<skip.dump>false</skip.dump>
		<skip.int.tests.report>false</skip.int.tests.report>
	</properties>

	<dependencies>
	<!-- Registering with Eureka Server -->
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.codehaus.woodstox</groupId>
		    <artifactId>stax2-api</artifactId>
		    <version>4.0.0</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency> -->
		
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
		</dependency>
		
		<dependency> 
	      <groupId>de.codecentric</groupId>
	      <artifactId>spring-boot-admin-starter-client</artifactId>
	    </dependency>
	    
	    <dependency>
	      <groupId>org.springframework.cloud</groupId>
	      <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
	    </dependency>
	    <dependency>
	      <groupId>org.springframework.cloud</groupId>
	      <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
	    </dependency>
	  <!-- Dependencies Added for Code Coverage -->  
	    <dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.agent</artifactId>
			<version>0.7.5.201505241946</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency> 
			
			<dependency>
		        <groupId>de.codecentric</groupId>
		        <artifactId>spring-boot-admin-dependencies</artifactId>
		        <version>${spring-boot-admin.version}</version>
		        <type>pom</type>
		        <scope>import</scope>
	       </dependency>
	      	
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<port>36320</port>
							<destFile>jacoco-it.exec</destFile>
							<output>tcpserver</output>
						</configuration>
					</execution>
					<execution>
						<id>pull-test-data</id>
						<phase>test</phase>
						<goals>
							<goal>dump</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-it-${app.host}.exec</destFile>
							<address>${app.host}</address>
							<port>${app.port}</port>
							<reset>true</reset>
							<skip>${skip.dump}</skip>
						</configuration>
					</execution>
					<execution>
						<id>merge-test-data</id>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<destFile>target/jacoco-it.exec</destFile>
							<skip>${skip.dump}</skip>
							<fileSets>
								<fileSet
									implementation="org.apache.maven.shared.model.fileset.FileSet">
									<directory>target</directory>
									<includes>
										<include>*it*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-integration-initialize</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<propertyName>failsafe.argLine</propertyName>
							<destFile>target/jacoco-it-base.exec</destFile>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<propertyName>jacoco.agent.argLine</propertyName>
					<skip>false</skip>
					<append>true</append>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>generate-report</id>
<!-- 						 <phase>post-integration-test</phase>  -->
						 <phase>test</phase> 
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<skip>${skip.int.tests.report}</skip>
							<target>
								<!-- Execute an ant task within maven -->
								<echo message="Generating JaCoCo Coverage Reports" />
								<taskdef name="report"
									classname="org.jacoco.ant.ReportTask">
									<classpath
										path="${basedir}/target/jacoco-jars/org.jacoco.ant.jar" />
								</taskdef>
								<mkdir dir="${basedir}/target/coverage-report" />
								<report>
									<executiondata>
										<fileset dir="${basedir}">
											<include name="target/jacoco-it*.exec" />
										</fileset>
									</executiondata>
									<structure name="Functional Test Coverage Project">
										<group name="Coverage Report">
											<classfiles>
												<fileset dir="target/classes" >
												<!-- <exclude name="com/ps/e2e/jacoco/testcoverageexample/TestCoverageExampleApplication.class"/> -->
												</fileset>
											</classfiles>
											<sourcefiles encoding="UTF-8">
												<fileset dir="src/main/java" />
											</sourcefiles>
										</group>
									</structure>
									<html destdir="${basedir}/target/coverage-report/html" />
									<xml
										destfile="${basedir}/target/coverage-report/coverage-report.xml" />
									<csv
										destfile="${basedir}/target/coverage-report/coverage-report.csv" />
								</report>
							</target>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.jacoco</groupId>
						<artifactId>org.jacoco.ant</artifactId>
						<version>${jacoco.ant.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			
		</plugins>
	</build>

</project>
